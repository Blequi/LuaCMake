name: Windows Visual Studio Lua Install
run-name: Testing out Lua install on Windows with Visual Studio
on: [push]
jobs:
  Windows-Visual-Studio-Lua-Install:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    strategy:
      matrix:
        # LUA_VERSION: ['5.1.5', '5.2.4', '5.3.6', '5.4.6']
        LUA_VERSION: ['5.4.6']
        LUAROCKS_VERSION: ['3.11.0']
    steps:
      - name: Checkout repository to LuaCMake directory
        uses: actions/checkout@v4
        with:
          path: LuaCMake
      - name: Configure the build of Lua ${{ matrix.LUA_VERSION }}
        run: cmake -DCMAKE_BUILD_TYPE=Release -DDOWNLOAD_LUA_SOURCES=ON "-DLUA_VERSION=${{ matrix.LUA_VERSION }}" --install-prefix %RUNNER_TEMP%\Lua-install\${{ matrix.LUA_VERSION }} -S LuaCMake -B %RUNNER_TEMP%\Lua-build\${{ matrix.LUA_VERSION }}
      - name: Build Lua ${{ matrix.LUA_VERSION }}
        run: cmake --build %RUNNER_TEMP%\Lua-build\${{ matrix.LUA_VERSION }} --config Release
      - name: Install Lua ${{ matrix.LUA_VERSION }}
        run: cmake --install %RUNNER_TEMP%\Lua-build\${{ matrix.LUA_VERSION }} --config Release
      - name: Test Lua ${{ matrix.LUA_VERSION }}
        run: >-
          %RUNNER_TEMP%\Lua-install\${{ matrix.LUA_VERSION }}\bin\lua.exe -v
      - name: Download LuaRocks
        run: Invoke-WebRequest -Uri https://luarocks.org/releases/luarocks-${{ matrix.LUAROCKS_VERSION }}-windows-64.zip -OutFile luarocks-${{ matrix.LUAROCKS_VERSION }}-windows-64.zip
        shell: powershell
      - name: Extract LuaRocks
        run: powershell -Command "Expand-Archive luarocks-${{ matrix.LUAROCKS_VERSION }}-windows-64.zip -DestinationPath %RUNNER_TEMP%"
      - name: Place Lua on system environment variable PATH
        run: |
          echo "PATH: %PATH%"
          set PATH=%RUNNER_TEMP%\Lua-install\${{ matrix.LUA_VERSION }}\bin;%PATH%
      - name: Place LuaRocks on system environment variable PATH
        run: |
          echo "PATH: %PATH%"
          set PATH=%RUNNER_TEMP%\luarocks-${{ matrix.LUAROCKS_VERSION }}-windows-64;%PATH%
      - name: Load MSVC Dev Command Prompt for x64, configure LuaRocks, install and test LuaFileSystem
        run: |
          for /f "usebackq delims=" %%i in (`"%ProgramFiles(x86)%\Microsoft Visual Studio\Installer\vswhere.exe" -latest -property installationPath`) do (
            if exist "%%i\VC\Auxiliary\Build\vcvarsall.bat" (
              call "%%i\VC\Auxiliary\Build\vcvarsall.bat" x64
              exit /b
            )
          )

          exit /b 2
      - name: Configure LuaRocks
        run: |
          echo "PATH: %PATH%"
          luarocks.exe config lua_dir %RUNNER_TEMP%\Lua-install\${{ matrix.LUA_VERSION }}
      - name: Write LuaRocks environment variables to file
        run: |
          luarocks.exe path > %RUNNER_TEMP%\LuaRocks-activate.bat
          type %RUNNER_TEMP%\LuaRocks-activate.bat
      - name: Install and Test LuaFileSystem
        run: |
          echo "PATH: %PATH%"
          call %RUNNER_TEMP%\LuaRocks-activate.bat
          echo "PATH: %PATH%"
          luarocks install luafilesystem
          lua -e "local lfs = require'lfs'; function attrdir (path) for file in lfs.dir(path) do if file ~= '.' and file ~= '..' then local f = path..'/'..file; print ('\t '..f); local attr = lfs.attributes (f); assert (type(attr) == 'table'); if attr.mode == 'directory' then attrdir (f); else for name, value in pairs(attr) do print (name, value); end end end end end attrdir ('.')"